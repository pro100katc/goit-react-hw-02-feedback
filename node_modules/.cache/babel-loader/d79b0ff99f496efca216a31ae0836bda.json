{"ast":null,"code":"var _jsxFileName = \"/Users/serhiikotcinskiy/Documents/JS 59/goit-react-hw-02-feedback/src/components/FeedbackOptions/FeedbackOptions.jsx\";\nimport PropTypes from 'prop-types';\nimport styles from 'components/FeedbackOptions/FeedbackOptions.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FeedbackOptions = _ref => {\n  let {\n    options,\n    onLeaveFeedback\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.feedback,\n    children: options.map(option => {\n      const capitalizedOption = option.charAt(0).toUpperCase() + option.slice(1);\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        type: \"button\",\n        name: option,\n        onClick: onLeaveFeedback,\n        children: capitalizedOption\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n};\n_c = FeedbackOptions;\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackOptions\");","map":{"version":3,"sources":["/Users/serhiikotcinskiy/Documents/JS 59/goit-react-hw-02-feedback/src/components/FeedbackOptions/FeedbackOptions.jsx"],"names":["PropTypes","styles","FeedbackOptions","options","onLeaveFeedback","feedback","map","option","capitalizedOption","charAt","toUpperCase","slice","button","propTypes","arrayOf","string","isRequired","func"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,uDAAnB;;AAEA,OAAO,MAAMC,eAAe,GAAG,QAAgC;AAAA,MAA/B;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAA+B;AAC3D,sBAAO;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACI,QAAvB;AAAA,cAAkCF,OAAO,CAACG,GAAR,CAAaC,MAAD,IAAY;AAC7D,YAAMC,iBAAiB,GAAGD,MAAM,CAACE,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCH,MAAM,CAACI,KAAP,CAAa,CAAb,CAA3D;AACA,0BAAO;AAAQ,QAAA,SAAS,EAAEV,MAAM,CAACW,MAA1B;AAAkC,QAAA,IAAI,EAAC,QAAvC;AAA6D,QAAA,IAAI,EAAEL,MAAnE;AAA2E,QAAA,OAAO,EAAEH,eAApF;AAAA,kBAAsGI;AAAtG,SAAqDD,MAArD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAHwC;AAAlC;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,CANM;KAAML,e;AAQbA,eAAe,CAACW,SAAhB,GAA4B;AACxBV,EAAAA,OAAO,EAAEH,SAAS,CAACc,OAAV,CAAkBd,SAAS,CAACe,MAAV,CAAiBC,UAAnC,EAA+CA,UADhC;AAExBZ,EAAAA,eAAe,EAAEJ,SAAS,CAACiB,IAAV,CAAeD;AAFR,CAA5B","sourcesContent":["import PropTypes from 'prop-types';\nimport styles from 'components/FeedbackOptions/FeedbackOptions.module.css';\n\nexport const FeedbackOptions = ({options, onLeaveFeedback}) => {\n    return <div className={styles.feedback}>{options.map((option) => {\n        const capitalizedOption = option.charAt(0).toUpperCase() + option.slice(1);\n        return <button className={styles.button} type=\"button\" key={option} name={option} onClick={onLeaveFeedback}>{capitalizedOption}</button>\n    })}\n    </div>\n}\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired\n}"]},"metadata":{},"sourceType":"module"}